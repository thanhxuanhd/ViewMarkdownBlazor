@page "/ViewFolder/{FilePath?}"
@inject NavigationManager NavigationHelper
<MudContainer>
    <MudText Typo="Typo.h4" Class="mb-5">
        Markdown Items
        @if (!string.IsNullOrEmpty(FilePath))
        {
            <span>@Path.GetFileName(FilePath)</span>
        }
    </MudText>
    @if (MarkdownItems != null)
    {
        <MarkdownItemTemplate Items="MarkdownItems"></MarkdownItemTemplate>
    }
</MudContainer>


@code {

    [Parameter]
    [SupplyParameterFromQuery]
    public string FilePath { get; set; } = string.Empty;

    public List<MarkdownItem> MarkdownItems { get; set; } = new();

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(FilePath))
        {
            FilePath = Encoding.UTF8.GetString(Convert.FromBase64String(FilePath));

            GetMarkdownItemFile();
        }
    }

    private void GetMarkdownItemFile()
    {
        try
        {
            if (Directory.Exists(FilePath))
            {
                var files = Directory.GetFiles(FilePath, "*.md", SearchOption.AllDirectories).ToList();

                if (files.Any())
                {
                    List<MarkdownItem> markdowns = new();
                    files.ForEach(f =>
                    {
                        if (File.Exists(f))
                        {
                            MarkdownItem markdown = new()
                                {
                                    FilePath = f,
                                    FolderName = Path.GetDirectoryName(f),
                                    Name = Path.GetFileName(f)
                                };
                            markdowns.Add(markdown);
                        }
                    });

                    MarkdownItems = markdowns.OrderBy(x => x.Name).ToList();
                }
            }
        }
        catch (Exception ex)
        {
        }
    }
}
