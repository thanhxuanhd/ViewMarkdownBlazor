@page "/ViewMarkdownDetail/{MarkdownFilePath?}"
@inject NavigationManager NavigationHelper
<HeadContent>
    <link href="css/site.css" rel="stylesheet" />
</HeadContent>
<MudContainer MaxWidth="MaxWidth.Large" Class="mb-5">
    @((MarkupString)MarkdownDocument)
</MudContainer>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string MarkdownFilePath { get; set; } = string.Empty;

    public string MarkdownDocument { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(MarkdownFilePath))
        {
            MarkdownFilePath = Encoding.UTF8.GetString(Convert.FromBase64String(MarkdownFilePath));

            GetMarkdownItemFileDetail();
        }
    }

    public void GetMarkdownItemFileDetail()
    {
        try
        {

            if (File.Exists(MarkdownFilePath))
            {
                var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().UseBootstrap().Build();

                string document = System.IO.File.ReadAllText(MarkdownFilePath);

                MarkdownDocument = Markdown.ToHtml(document, pipeline);
            }
        }
        catch (Exception ex)
        {
        }
    }
}
