@page "/"
@inject IWebHostEnvironment env
@inject IConfiguration configurations
@inject ILogger<Index> logs

<PageTitle>View Markdown Manager</PageTitle>

<MudContainer>
    <MudText Typo="Typo.h4" Class="mb-5">View Markdown Manager</MudText>

    @if (Items.Any())
    {
      <FolderTemplate Items="Items"></FolderTemplate>
    }
    else
    {
        <div class="card m-2 p-1">
            <div class="card-body text-center">
                <b>Folder Empty</b>
            </div>
        </div>
    }
</MudContainer>



@code {
    public List<ViewMarkdownModel> Items { get; set; } = new();

    protected override void OnInitialized()
    {
        try
        {
            var markdownFolder = configurations["MarkdownFolder"] ?? "files";

            var pathDir = Path.Combine(env.WebRootPath, markdownFolder);

            if (!Directory.Exists(pathDir))
            {
                Directory.CreateDirectory(pathDir);
            }

            var folders = Directory.GetDirectories(pathDir).ToList();

            if (folders.Any())
            {
                GetMarkdownInFolderSetup(folders);
            }
        }
        catch (Exception ex)
        {
            logs.LogError(ex.Message);
        }
    }

    private void GetMarkdownInFolderSetup(List<string> folders)
    {
        List<ViewMarkdownModel> viewMarkdownItems = new();

        foreach (var folder in folders)
        {
            ViewMarkdownModel fileMarkdown = new()
                {
                    FolderName = Path.GetFileName(folder),
                    FolderPath = folder
                };

            var files = Directory.GetFiles(folder, "*.md", SearchOption.AllDirectories).ToList();

            if (files.Any())
            {
                List<MarkdownItem> markdowns = new();
                files.ForEach(f =>
                {
                    if (File.Exists(f))
                    {
                        MarkdownItem markdown = new()
                            {
                                FilePath = f,
                                FolderName = Path.GetDirectoryName(f),
                                Name = Path.GetFileName(f)
                            };
                        markdowns.Add(markdown);
                    }
                });

                fileMarkdown.MarkdownItems = markdowns;
            }

            viewMarkdownItems.Add(fileMarkdown);
        }

        Items = viewMarkdownItems;
    }

}
